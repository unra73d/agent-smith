name: Build Application

on:
  push:
    tags: # Trigger on new tags like v1.0.0, v1.2.3 etc.
      - "v*"
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    needs: read-version
    strategy:
      matrix:
        os_config:
          - os_runner: ubuntu-22.04
            goos: linux
            goarch: amd64
            deps: "sudo apt-get update && sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev"
            output_suffix: "_linux_amd64"
          - os_runner: windows-latest
            goos: windows
            goarch: amd64
            deps: "windres platform/windows/windows.rc -O coff -o rsrc_windows_amd64.syso"
            output_suffix: "_windows_amd64.exe"

    runs-on: ${{ matrix.os_config.os_runner }}
    env:
      APP_NAME: AgentSmith
      APP_VERSION: ${{ needs.read-version.outputs.app_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.2"

      - name: Tidy Go modules
        run: go mod tidy
        shell: bash

      - name: Set BUILD_NUMBER (for macOS Info.plist)
        run: echo "BUILD_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Install Dependencies & Build
        run: |
          OUTPUT_FILENAME="${APP_NAME}_${APP_VERSION}${MATRIX_OS_CONFIG_OUTPUT_SUFFIX}"

          if [[ -n "${{ matrix.os_config.deps }}" ]]; then
            echo "--- Installing dependencies for ${{ matrix.os_config.goos }} ---"
            eval "${{ matrix.os_config.deps }}"
          fi

          echo "--- Building for ${{ matrix.os_config.goos }}/${{ matrix.os_config.goarch }} ---"
          if [[ "${{ matrix.os_config.goos }}" == "windows" ]]; then
            CGO_ENABLED=1 GOOS=windows GOARCH=amd64 CC=x86_64-w64-mingw32-gcc \
            CXX=x86_64-w64-mingw32-g++ go build -ldflags='-s -w -H windowsgui' \
            -o "$OUTPUT_FILENAME" src/app/main.go
          fi
        shell: bash
        env:
          MATRIX_OS_CONFIG_DEPS: ${{ matrix.os_config.deps }}
          MATRIX_OS_CONFIG_OUTPUT_SUFFIX: ${{ matrix.os_config.output_suffix }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ env.APP_VERSION }}-${{ matrix.os_config.goos }}-${{ matrix.os_config.goarch }}
          path: |
            ${{ env.APP_NAME }}_${{ env.APP_VERSION }}${{ matrix.os_config.output_suffix }}
          if-no-files-found: error
